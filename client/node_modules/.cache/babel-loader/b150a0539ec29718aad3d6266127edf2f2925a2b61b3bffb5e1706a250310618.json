{"ast":null,"code":"var _jsxFileName = \"C:\\\\FINALPROJECT\\\\client\\\\src\\\\components\\\\JobPost\\\\index.js\",\n  _s = $RefreshSig$();\n/*import React, { useState } from 'react';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { CREATE_JOB } from '../../utils/mutation';\r\n\r\nconst JobForm = () => {\r\n  const [ formState, setFormState] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n  });\r\n  const [createJob, { error, data}] = useMutation(CREATE_JOB);\r\n\r\n  // update state based on form input changes\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await createJob({\r\n        variables: { ...formState },\r\n      });\r\n      window.location.reload();\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n  return (\r\n    <main className=\"flex-row justify-center mb-4\">\r\n      <div className=\"col-12 col-lg-10\">\r\n        <div className=\"card\">\r\n          <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\r\n          <div className=\"card-body\">\r\n              <form onSubmit={handleFormSubmit}>\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"Enter Title\"\r\n                  name=\"title\"\r\n                  type=\"text\"\r\n                  value={formState.title}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"Enter Description\"\r\n                  name=\"description\"\r\n                  type=\"text\"\r\n                  value={formState.description}\r\n                  onChange={handleChange}\r\n                />\r\n                <button\r\n                  className=\"btn btn-block btn-info\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n\r\n            {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default JobForm*/\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { CREATE_JOB } from './mutations'; // Assuming you have defined the mutation in a separate file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateJobForm = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [createJob, {\n    loading,\n    error\n  }] = useMutation(CREATE_JOB);\n  const handleSubmit = e => {\n    e.preventDefault();\n    createJob({\n      variables: {\n        title,\n        description\n      }\n      // You can also provide an update function to handle the response data\n      // update: (cache, { data: { createJob } }) => {\n      //   // Handle cache updates if needed\n      // },\n    }).then(response => {\n      // Handle successful mutation\n      console.log(response.data);\n    }).catch(error => {\n      // Handle error\n      console.error(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      children: loading ? 'Creating Job...' : 'Create Job'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateJobForm, \"ooKoL/3od7noalI0dIUQ79FXhmg=\", false, function () {\n  return [useMutation];\n});\n_c = CreateJobForm;\nexport default CreateJobForm;\nvar _c;\n$RefreshReg$(_c, \"CreateJobForm\");","map":{"version":3,"names":["React","useState","useMutation","CREATE_JOB","jsxDEV","_jsxDEV","CreateJobForm","_s","title","setTitle","description","setDescription","createJob","loading","error","handleSubmit","e","preventDefault","variables","then","response","console","log","data","catch","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","disabled","message","_c","$RefreshReg$"],"sources":["C:/FINALPROJECT/client/src/components/JobPost/index.js"],"sourcesContent":["/*import React, { useState } from 'react';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { CREATE_JOB } from '../../utils/mutation';\r\n\r\nconst JobForm = () => {\r\n  const [ formState, setFormState] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n  });\r\n  const [createJob, { error, data}] = useMutation(CREATE_JOB);\r\n\r\n  // update state based on form input changes\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await createJob({\r\n        variables: { ...formState },\r\n      });\r\n      window.location.reload();\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n  return (\r\n    <main className=\"flex-row justify-center mb-4\">\r\n      <div className=\"col-12 col-lg-10\">\r\n        <div className=\"card\">\r\n          <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\r\n          <div className=\"card-body\">\r\n              <form onSubmit={handleFormSubmit}>\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"Enter Title\"\r\n                  name=\"title\"\r\n                  type=\"text\"\r\n                  value={formState.title}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"Enter Description\"\r\n                  name=\"description\"\r\n                  type=\"text\"\r\n                  value={formState.description}\r\n                  onChange={handleChange}\r\n                />\r\n                <button\r\n                  className=\"btn btn-block btn-info\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n\r\n            {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default JobForm*/\r\n\r\nimport React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { CREATE_JOB } from './mutations'; // Assuming you have defined the mutation in a separate file\r\n\r\nconst CreateJobForm = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  const [createJob, { loading, error }] = useMutation(CREATE_JOB);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    createJob({\r\n      variables: { title, description },\r\n      // You can also provide an update function to handle the response data\r\n      // update: (cache, { data: { createJob } }) => {\r\n      //   // Handle cache updates if needed\r\n      // },\r\n    })\r\n      .then((response) => {\r\n        // Handle successful mutation\r\n        console.log(response.data);\r\n      })\r\n      .catch((error) => {\r\n        // Handle error\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor=\"title\">Title:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"description\">Description:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\" disabled={loading}>\r\n        {loading ? 'Creating Job...' : 'Create Job'}\r\n      </button>\r\n      {error && <p>Error: {error.message}</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateJobForm;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,UAAU,QAAQ,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAM,CAACW,SAAS,EAAE;IAAEC,OAAO;IAAEC;EAAM,CAAC,CAAC,GAAGZ,WAAW,CAACC,UAAU,CAAC;EAE/D,MAAMY,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElBL,SAAS,CAAC;MACRM,SAAS,EAAE;QAAEV,KAAK;QAAEE;MAAY;MAChC;MACA;MACA;MACA;IACF,CAAC,CAAC,CACCS,IAAI,CAAEC,QAAQ,IAAK;MAClB;MACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDC,KAAK,CAAEV,KAAK,IAAK;MAChB;MACAO,OAAO,CAACP,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC;EAED,oBACET,OAAA;IAAMoB,QAAQ,EAAEV,YAAa;IAAAW,QAAA,gBAC3BrB,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAOsB,OAAO,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrC1B,OAAA;QACE2B,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,OAAO;QACVC,KAAK,EAAE1B,KAAM;QACb2B,QAAQ,EAAGnB,CAAC,IAAKP,QAAQ,CAACO,CAAC,CAACoB,MAAM,CAACF,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN1B,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAOsB,OAAO,EAAC,aAAa;QAAAD,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjD1B,OAAA;QACE2B,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,aAAa;QAChBC,KAAK,EAAExB,WAAY;QACnByB,QAAQ,EAAGnB,CAAC,IAAKL,cAAc,CAACK,CAAC,CAACoB,MAAM,CAACF,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN1B,OAAA;MAAQ2B,IAAI,EAAC,QAAQ;MAACK,QAAQ,EAAExB,OAAQ;MAAAa,QAAA,EACrCb,OAAO,GAAG,iBAAiB,GAAG;IAAY;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,EACRjB,KAAK,iBAAIT,OAAA;MAAAqB,QAAA,GAAG,SAAO,EAACZ,KAAK,CAACwB,OAAO;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEX,CAAC;AAACxB,EAAA,CApDID,aAAa;EAAA,QAIuBJ,WAAW;AAAA;AAAAqC,EAAA,GAJ/CjC,aAAa;AAsDnB,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}